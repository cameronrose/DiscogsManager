{"version":3,"sources":["C:/Projects/Angular/DiscogsManager/src/$_lazy_route_resource lazy","C:/Projects/Angular/DiscogsManager/src/app/app.module.ts","C:/Projects/Angular/DiscogsManager/src/app/core/actions/layout.ts","C:/Projects/Angular/DiscogsManager/src/app/core/components/layout/layout.css","C:/Projects/Angular/DiscogsManager/src/app/core/components/layout/layout.html","C:/Projects/Angular/DiscogsManager/src/app/core/components/layout/layout.ts","C:/Projects/Angular/DiscogsManager/src/app/core/components/nav-item/nav-item.css","C:/Projects/Angular/DiscogsManager/src/app/core/components/nav-item/nav-item.html","C:/Projects/Angular/DiscogsManager/src/app/core/components/nav-item/nav-item.ts","C:/Projects/Angular/DiscogsManager/src/app/core/components/sidenav/sidenav.css","C:/Projects/Angular/DiscogsManager/src/app/core/components/sidenav/sidenav.html","C:/Projects/Angular/DiscogsManager/src/app/core/components/sidenav/sidenav.ts","C:/Projects/Angular/DiscogsManager/src/app/core/components/toolbar/toolbar.html","C:/Projects/Angular/DiscogsManager/src/app/core/components/toolbar/toolbar.ts","C:/Projects/Angular/DiscogsManager/src/app/core/containers/app.html","C:/Projects/Angular/DiscogsManager/src/app/core/containers/app.ts","C:/Projects/Angular/DiscogsManager/src/app/core/containers/not-found-page.css","C:/Projects/Angular/DiscogsManager/src/app/core/containers/not-found-page.html","C:/Projects/Angular/DiscogsManager/src/app/core/containers/not-found-page.ts","C:/Projects/Angular/DiscogsManager/src/app/core/core.module.ts","C:/Projects/Angular/DiscogsManager/src/app/core/reducers/layout.ts","C:/Projects/Angular/DiscogsManager/src/app/core/services/discogs.service.ts","C:/Projects/Angular/DiscogsManager/src/app/db.ts","C:/Projects/Angular/DiscogsManager/src/app/material/index.ts","C:/Projects/Angular/DiscogsManager/src/app/material/material.module.ts","C:/Projects/Angular/DiscogsManager/src/app/reducers/index.ts","C:/Projects/Angular/DiscogsManager/src/app/routes.ts","C:/Projects/Angular/DiscogsManager/src/app/shared/utils.ts","C:/Projects/Angular/DiscogsManager/src/environments/environment.ts","C:/Projects/Angular/DiscogsManager/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["var map = {\n\t\"./releases/releases.module\": [\n\t\t\"../../../../../src/app/releases/releases.module.ts\",\n\t\t\"releases.module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Projects/Angular/DiscogsManager/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule } from '@angular/router';\n\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { DBModule } from '@ngrx/db';\nimport {\n  StoreRouterConnectingModule,\n  RouterStateSerializer,\n} from '@ngrx/router-store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\n\nimport { CoreModule } from './core/core.module';\n\nimport { routes } from './routes';\nimport { reducers, metaReducers } from './reducers';\nimport { schema } from './db';\nimport { CustomRouterStateSerializer } from './shared/utils';\n\nimport { AppComponent } from './core/containers/app';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    RouterModule.forRoot(routes, { useHash: true }),\n\n    /**\n     * StoreModule.forRoot is imported once in the root module, accepting a reducer\n     * function or object map of reducer functions. If passed an object of\n     * reducers, combineReducers will be run creating your application\n     * meta-reducer. This returns all providers for an @ngrx/store\n     * based application.\n     */\n    StoreModule.forRoot(reducers, { metaReducers }),\n\n    /**\n     * @ngrx/router-store keeps router state up-to-date in the store.\n     */\n    StoreRouterConnectingModule.forRoot({\n      /*\n        They stateKey defines the name of the state used by the router-store reducer.\n        This matches the key defined in the map of reducers\n      */\n      stateKey: 'router',\n    }),\n\n    /**\n     * Store devtools instrument the store retaining past versions of state\n     * and recalculating new states. This enables powerful time-travel\n     * debugging.\n     *\n     * To use the debugger, install the Redux Devtools extension for either\n     * Chrome or Firefox\n     *\n     * See: https://github.com/zalmoxisus/redux-devtools-extension\n     */\n    StoreDevtoolsModule.instrument({\n      name: 'Discogs manager with Angular and ngrx',\n      logOnly: environment.production,\n    }),\n\n    /**\n     * EffectsModule.forRoot() is imported once in the root module and\n     * sets up the effects class to be initialized immediately when the\n     * application starts.\n     *\n     * See: https://github.com/ngrx/platform/blob/master/docs/effects/api.md#forroot\n     */\n    EffectsModule.forRoot([]),\n\n    /**\n     * `provideDB` sets up @ngrx/db with the provided schema and makes the Database\n     * service available.\n     */\n    DBModule.provideDB(schema),\n\n    CoreModule.forRoot(),\n  ],\n  providers: [\n    /**\n     * The `RouterStateSnapshot` provided by the `Router` is a large complex structure.\n     * A custom RouterStateSerializer is used to parse the `RouterStateSnapshot` provided\n     * by `@ngrx/router-store` to include only the desired pieces of the snapshot.\n     */\n    { provide: RouterStateSerializer, useClass: CustomRouterStateSerializer },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/Angular/DiscogsManager/src/app/app.module.ts","import { Action } from '@ngrx/store';\r\n\r\nexport enum LayoutActionTypes {\r\n  OpenSidenav = '[Layout] Open Sidenav',\r\n  CloseSidenav = '[Layout] Close Sidenav',\r\n}\r\n\r\nexport class OpenSidenav implements Action {\r\n  readonly type = LayoutActionTypes.OpenSidenav;\r\n}\r\n\r\nexport class CloseSidenav implements Action {\r\n  readonly type = LayoutActionTypes.CloseSidenav;\r\n}\r\n\r\nexport type LayoutActions = OpenSidenav | CloseSidenav;\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/Angular/DiscogsManager/src/app/core/actions/layout.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"mat-sidenav-container {\\r\\n    background: rgba(0, 0, 0, 0.03);\\r\\n  }\\r\\n\\r\\n  *, /deep/ * {\\r\\n    -webkit-font-smoothing: antialiased;\\r\\n    -moz-osx-font-smoothing: grayscale;\\r\\n  }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Projects/Angular/DiscogsManager/src/app/core/components/layout/layout.css\n// module id = ../../../../../src/app/core/components/layout/layout.css\n// module chunks = main","module.exports = \"<mat-sidenav-container fullscreen>\\r\\n\\r\\n    <ng-content></ng-content>\\r\\n\\r\\n  </mat-sidenav-container>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Projects/Angular/DiscogsManager/src/app/core/components/layout/layout.html\n// module id = ../../../../../src/app/core/components/layout/layout.html\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'dc-layout',\r\n  templateUrl: './layout.html',\r\n  styleUrls:['./layout.css']\r\n})\r\nexport class LayoutComponent {}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/Angular/DiscogsManager/src/app/core/components/layout/layout.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".secondary {\\r\\n    color: rgba(0, 0, 0, 0.54);\\r\\n  }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Projects/Angular/DiscogsManager/src/app/core/components/nav-item/nav-item.css\n// module id = ../../../../../src/app/core/components/nav-item/nav-item.css\n// module chunks = main","module.exports = \"<a mat-list-item [routerLink]=\\\"routerLink\\\" (click)=\\\"navigate.emit()\\\">\\r\\n    <mat-icon mat-list-icon>{{ icon }}</mat-icon>\\r\\n    <span mat-line><ng-content></ng-content></span>\\r\\n    <span mat-line class=\\\"secondary\\\">{{ hint }}</span>\\r\\n  </a>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Projects/Angular/DiscogsManager/src/app/core/components/nav-item/nav-item.html\n// module id = ../../../../../src/app/core/components/nav-item/nav-item.html\n// module chunks = main","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'dc-nav-item',\r\n  templateUrl: './nav-item.html',\r\n  styleUrls: ['./nav-item.css']\r\n})\r\nexport class NavItemComponent {\r\n  @Input() icon = '';\r\n  @Input() hint = '';\r\n  @Input() routerLink: string | any[] = '/';\r\n  @Output() navigate = new EventEmitter();\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/Angular/DiscogsManager/src/app/core/components/nav-item/nav-item.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"mat-sidenav {\\r\\n    width: 300px;\\r\\n  }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Projects/Angular/DiscogsManager/src/app/core/components/sidenav/sidenav.css\n// module id = ../../../../../src/app/core/components/sidenav/sidenav.css\n// module chunks = main","module.exports = \"<mat-sidenav [opened]=\\\"open\\\">\\r\\n    <mat-nav-list>\\r\\n      <ng-content></ng-content>\\r\\n    </mat-nav-list>\\r\\n  </mat-sidenav>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Projects/Angular/DiscogsManager/src/app/core/components/sidenav/sidenav.html\n// module id = ../../../../../src/app/core/components/sidenav/sidenav.html\n// module chunks = main","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'dc-sidenav',\r\n  templateUrl: './sidenav.html',\r\n  styleUrls: ['./sidenav.css']\r\n})\r\nexport class SidenavComponent {\r\n  @Input() open = false;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/Angular/DiscogsManager/src/app/core/components/sidenav/sidenav.ts","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n    <button mat-icon-button (click)=\\\"openMenu.emit()\\\">\\r\\n      <mat-icon>menu</mat-icon>\\r\\n    </button>\\r\\n    <ng-content></ng-content>\\r\\n  </mat-toolbar>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Projects/Angular/DiscogsManager/src/app/core/components/toolbar/toolbar.html\n// module id = ../../../../../src/app/core/components/toolbar/toolbar.html\n// module chunks = main","import { Component, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'dc-toolbar',\r\n  templateUrl: './toolbar.html'\r\n})\r\nexport class ToolbarComponent {\r\n  @Output() openMenu = new EventEmitter();\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/Angular/DiscogsManager/src/app/core/components/toolbar/toolbar.ts","module.exports = \"<dc-layout>\\r\\n  <dc-sidenav [open]=\\\"showSidenav$ | async\\\">\\r\\n    <!-- <dc-nav-item (navigate)=\\\"closeSidenav()\\\" *ngIf=\\\"loggedIn$ | async\\\" routerLink=\\\"/\\\" icon=\\\"book\\\" hint=\\\"View your book collection\\\">\\r\\n      My Collection\\r\\n    </dc-nav-item> -->\\r\\n    <dc-nav-item (navigate)=\\\"closeSidenav()\\\" *ngIf=\\\"loggedIn$ | async\\\" routerLink=\\\"/releases/find\\\" icon=\\\"search\\\" hint=\\\"Find your next book!\\\">\\r\\n      Search\\r\\n    </dc-nav-item>\\r\\n    <dc-nav-item (navigate)=\\\"closeSidenav()\\\" *ngIf=\\\"!(loggedIn$ | async)\\\">\\r\\n      Sign In\\r\\n    </dc-nav-item>\\r\\n    <dc-nav-item (navigate)=\\\"logout()\\\" *ngIf=\\\"loggedIn$ | async\\\">\\r\\n      Sign Out\\r\\n    </dc-nav-item>\\r\\n  </dc-sidenav>\\r\\n  <dc-toolbar (openMenu)=\\\"openSidenav()\\\">\\r\\n    Search\\r\\n  </dc-toolbar>\\r\\n\\r\\n  <router-outlet></router-outlet>\\r\\n</dc-layout>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Projects/Angular/DiscogsManager/src/app/core/containers/app.html\n// module id = ../../../../../src/app/core/containers/app.html\n// module chunks = main","import { Observable } from 'rxjs/Observable';\r\nimport { Component, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Store, select } from '@ngrx/store';\r\n\r\nimport * as fromRoot from '../../reducers';\r\n//import * as fromAuth from '../../auth/reducers';\r\nimport * as layout from '../actions/layout';\r\n//import * as Auth from '../../auth/actions/auth';\r\n\r\n@Component({\r\n  selector: 'dc-app',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  templateUrl: './app.html'\r\n})\r\nexport class AppComponent {\r\n  showSidenav$: Observable<boolean>;\r\n  loggedIn$: Observable<boolean>;\r\n\r\n  constructor(private store: Store<fromRoot.State>) {\r\n    /**\r\n     * Selectors can be applied with the `select` operator which passes the state\r\n     * tree to the provided selector\r\n     */\r\n    this.showSidenav$ = this.store.pipe(select(fromRoot.getShowSidenav));\r\n    //this.loggedIn$ = this.store.pipe(select(fromAuth.getLoggedIn));\r\n  }\r\n\r\n  closeSidenav() {\r\n    /**\r\n     * All state updates are handled through dispatched actions in 'container'\r\n     * components. This provides a clear, reproducible history of state\r\n     * updates and user interaction through the life of our\r\n     * application.\r\n     */\r\n    this.store.dispatch(new layout.CloseSidenav());\r\n  }\r\n\r\n  openSidenav() {\r\n    this.store.dispatch(new layout.OpenSidenav());\r\n  }\r\n\r\n  logout() {\r\n    this.closeSidenav();\r\n\r\n    //this.store.dispatch(new Auth.Logout());\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/Angular/DiscogsManager/src/app/core/containers/app.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host {\\r\\n    text-align: center;\\r\\n  }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Projects/Angular/DiscogsManager/src/app/core/containers/not-found-page.css\n// module id = ../../../../../src/app/core/containers/not-found-page.css\n// module chunks = main","module.exports = \"<mat-card>\\r\\n    <mat-card-title>404: Not Found</mat-card-title>\\r\\n    <mat-card-content>\\r\\n      <p>Hey! It looks like this page doesn't exist yet.</p>\\r\\n    </mat-card-content>\\r\\n    <mat-card-actions>\\r\\n      <button mat-raised-button color=\\\"primary\\\" routerLink=\\\"/\\\">Take Me Home</button>\\r\\n    </mat-card-actions>\\r\\n  </mat-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Projects/Angular/DiscogsManager/src/app/core/containers/not-found-page.html\n// module id = ../../../../../src/app/core/containers/not-found-page.html\n// module chunks = main","import { Component, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'bc-not-found-page',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  templateUrl: './not-found-page.html',\r\n  styleUrls:['./not-found-page.css']\r\n})\r\nexport class NotFoundPageComponent {}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/Angular/DiscogsManager/src/app/core/containers/not-found-page.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AppComponent } from './containers/app';\r\nimport { NotFoundPageComponent } from './containers/not-found-page';\r\nimport { LayoutComponent } from './components/layout/layout';\r\nimport { NavItemComponent } from './components/nav-item/nav-item';\r\nimport { SidenavComponent } from './components/sidenav/sidenav';\r\nimport { ToolbarComponent } from './components/toolbar/toolbar';\r\nimport { MaterialModule } from '../material';\r\n\r\nimport { DiscogsService } from './services/discogs.service';\r\n\r\nexport const COMPONENTS = [\r\n  AppComponent,\r\n  NotFoundPageComponent,\r\n  LayoutComponent,\r\n  NavItemComponent,\r\n  SidenavComponent,\r\n  ToolbarComponent,\r\n];\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule, MaterialModule],\r\n  declarations: COMPONENTS,\r\n  exports: COMPONENTS,\r\n})\r\nexport class CoreModule {\r\n  static forRoot() {\r\n    return {\r\n      ngModule: CoreModule,\r\n      providers: [DiscogsService],\r\n    };\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/Angular/DiscogsManager/src/app/core/core.module.ts","import { LayoutActionTypes, LayoutActions } from '../actions/layout';\r\n\r\nexport interface State {\r\n  showSidenav: boolean;\r\n}\r\n\r\nconst initialState: State = {\r\n  showSidenav: false,\r\n};\r\n\r\nvar actionDict = {};\r\n\r\nfunction _closeSideNav() {\r\n  return { showSidenav: false };\r\n}\r\n\r\nfunction _openSidenav() {\r\n  return { showSidenav: true };\r\n}\r\n\r\nactionDict[LayoutActionTypes.CloseSidenav] = _closeSideNav;\r\nactionDict[LayoutActionTypes.OpenSidenav] = _openSidenav;\r\n\r\nexport function reducer(\r\n  state: State = initialState,\r\n  action: LayoutActions\r\n): State {\r\n  switch (action.type) {\r\n    case LayoutActionTypes.CloseSidenav:\r\n      return { showSidenav: false };\r\n    case LayoutActionTypes.OpenSidenav:\r\n      return { showSidenav: true };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const getShowSidenav = (state: State) => state.showSidenav;\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/Angular/DiscogsManager/src/app/core/reducers/layout.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { map } from 'rxjs/operators';\r\nimport * as models from '../../releases/models';\r\n\r\n@Injectable()\r\nexport class DiscogsService {\r\n  private API_PATH = 'https://api.discogs.com/';\r\n  private token = 'NrdbzBDFRADMleQMMXQSulkaAAEOROdYNRMHAYsG';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  search(q: string): Observable<models.Search> {\r\n    return this.http\r\n      .get<models.Search>(this.API_PATH + '/database/search?q=' + q + '&token=' + this.token)\r\n      .pipe(result => result);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/Angular/DiscogsManager/src/app/core/services/discogs.service.ts","import { DBSchema } from '@ngrx/db';\r\n\r\n/**\r\n * ngrx/db uses a simple schema config object to initialize stores in IndexedDB.\r\n */\r\nexport const schema: DBSchema = {\r\n  version: 1,\r\n  name: 'discogs_app',\r\n  stores: {\r\n    releases: {\r\n      autoIncrement: true,\r\n      primaryKey: 'id',\r\n    },\r\n  },\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/Angular/DiscogsManager/src/app/db.ts","export * from './material.module';\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/Angular/DiscogsManager/src/app/material/index.ts","import { NgModule } from '@angular/core';\r\n\r\nimport {\r\n  MatInputModule,\r\n  MatCardModule,\r\n  MatButtonModule,\r\n  MatSidenavModule,\r\n  MatListModule,\r\n  MatIconModule,\r\n  MatToolbarModule,\r\n  MatProgressSpinnerModule,\r\n} from '@angular/material';\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatIconModule,\r\n    MatToolbarModule,\r\n    MatProgressSpinnerModule,\r\n  ],\r\n  exports: [\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatIconModule,\r\n    MatToolbarModule,\r\n    MatProgressSpinnerModule,\r\n  ],\r\n})\r\nexport class MaterialModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/Angular/DiscogsManager/src/app/material/material.module.ts","import {\r\n  ActionReducerMap,\r\n  createSelector,\r\n  createFeatureSelector,\r\n  ActionReducer,\r\n  MetaReducer,\r\n} from '@ngrx/store';\r\nimport { environment } from '../../environments/environment';\r\nimport { RouterStateUrl } from '../shared/utils';\r\nimport * as fromRouter from '@ngrx/router-store';\r\n\r\n/**\r\n * storeFreeze prevents state from being mutated. When mutation occurs, an\r\n * exception will be thrown. This is useful during development mode to\r\n * ensure that none of the reducers accidentally mutates the state.\r\n */\r\nimport { storeFreeze } from 'ngrx-store-freeze';\r\n\r\n/**\r\n * Every reducer module's default export is the reducer function itself. In\r\n * addition, each module should export a type or interface that describes\r\n * the state of the reducer plus any selector functions. The `* as`\r\n * notation packages up all of the exports into a single object.\r\n */\r\n\r\nimport * as fromLayout from '../core/reducers/layout';\r\n\r\n/**\r\n * As mentioned, we treat each reducer like a table in a database. This means\r\n * our top level state interface is just a map of keys to inner state types.\r\n */\r\nexport interface State {\r\n  layout: fromLayout.State;\r\n  router: fromRouter.RouterReducerState<RouterStateUrl>;\r\n}\r\n\r\n/**\r\n * Our state is composed of a map of action reducer functions.\r\n * These reducer functions are called with each dispatched action\r\n * and the current or initial state and return a new immutable state.\r\n */\r\nexport const reducers: ActionReducerMap<State> = {\r\n  layout: fromLayout.reducer,\r\n  router: fromRouter.routerReducer,\r\n};\r\n\r\n// console.log all actions\r\nexport function logger(reducer: ActionReducer<State>): ActionReducer<State> {\r\n  return function(state: State, action: any): State {\r\n    console.log('state', state);\r\n    console.log('action', action);\r\n\r\n    return reducer(state, action);\r\n  };\r\n}\r\n\r\n/**\r\n * By default, @ngrx/store uses combineReducers with the reducer map to compose\r\n * the root meta-reducer. To add more meta-reducers, provide an array of meta-reducers\r\n * that will be composed to form the root meta-reducer.\r\n */\r\nexport const metaReducers: MetaReducer<State>[] = !environment.production\r\n  ? [logger, storeFreeze]\r\n  : [];\r\n\r\n/**\r\n * Layout Reducers\r\n */\r\nexport const getLayoutState = createFeatureSelector<fromLayout.State>('layout');\r\n\r\nexport const getShowSidenav = createSelector(\r\n  getLayoutState,\r\n  fromLayout.getShowSidenav\r\n);\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/Angular/DiscogsManager/src/app/reducers/index.ts","import { Routes } from '@angular/router';\r\n//import { AuthGuard } from './auth/services/auth-guard.service';\r\nimport { NotFoundPageComponent } from './core/containers/not-found-page';\r\n\r\nexport const routes: Routes = [\r\n  { path: '', redirectTo: '/releases', pathMatch: 'full' },\r\n  {\r\n    path: 'releases',\r\n    loadChildren: './releases/releases.module#ReleasesModule'\r\n    //canActivate: [AuthGuard],\r\n  },\r\n  { path: '**', component: NotFoundPageComponent },\r\n];\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/Angular/DiscogsManager/src/app/routes.ts","import { RouterStateSerializer } from '@ngrx/router-store';\r\nimport { RouterStateSnapshot, Params } from '@angular/router';\r\n\r\n/**\r\n * The RouterStateSerializer takes the current RouterStateSnapshot\r\n * and returns any pertinent information needed. The snapshot contains\r\n * all information about the state of the router at the given point in time.\r\n * The entire snapshot is complex and not always needed. In this case, you only\r\n * need the URL and query parameters from the snapshot in the store. Other items could be\r\n * returned such as route parameters and static route data.\r\n */\r\n\r\nexport interface RouterStateUrl {\r\n  url: string;\r\n  params: Params;\r\n  queryParams: Params;\r\n}\r\n\r\nexport class CustomRouterStateSerializer\r\n  implements RouterStateSerializer<RouterStateUrl> {\r\n  serialize(routerState: RouterStateSnapshot): RouterStateUrl {\r\n    let route = routerState.root;\r\n\r\n    while (route.firstChild) {\r\n      route = route.firstChild;\r\n    }\r\n\r\n    const { url, root: { queryParams } } = routerState;\r\n    const { params } = route;\r\n\r\n    // Only return an object including the URL, params and query params\r\n    // instead of the entire snapshot\r\n    return { url, params, queryParams };\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/Angular/DiscogsManager/src/app/shared/utils.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/Angular/DiscogsManager/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/Angular/DiscogsManager/src/main.ts"],"sourceRoot":"webpack:///"}